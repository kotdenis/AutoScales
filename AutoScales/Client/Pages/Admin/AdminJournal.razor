<table class="table table-dark table-striped table-hover" id="journaltable">
    <thead>
        <tr>
            <th>#</th>
            <th>Car brand</th>
            <th>Car plate</th>
            <th>Imported cargo</th>
            <th>Axles' quantity</th>
            <th>Weight</th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (TransportDtos?.Count > 0)
        {
            int num = Number;
            foreach(var dto in TransportDtos)
            {
                num += 1;
                <tr>
                    <td>@num</td>
                    <td>@dto.Name</td>
                    <td>@dto.Number</td>
                    <td>@dto.Cargo</td>
                    <td>@dto.AxisNumber</td>
                    <td>@dto.Weight</td>
                    <td>
                        <button class="btn btn-warning" style="font-weight:bold" @onclick="() => Update(dto)">Update</button>
                    </td>
                    <td>
                        <button class="btn btn-danger" style="font-weight:bold" @onclick="async() => await DeleteAsync(dto)">Delete</button>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>
<div>
    <ul class="pagination">
        @if (PagingHelper.Links != null)
        {
            @foreach (var link in PagingHelper.Links)
            {
                <li @onclick="async() => await PagingHelper.OnSelectedPage(link)" @onclick:preventDefault @onclick:stopPropagation
            style="cursor: pointer;" class="page-item @(link.Enabled ? null : "disabled")
                                    @(link.Active ? "active" : null)">
                    <span class="page-link" href="#">@link.Text</span>
                </li>
            }
        }
    </ul>
</div>

@code {
    [Parameter]
    public List<TransportDto> TransportDtos { get; set; }
    [Parameter]
    public int Number { get; set; }
    [Parameter]
    public int Spread { get; set; }
    [Parameter]
    public PagingHelper<TransportDto> PagingHelper { get; set; }
    [Parameter]
    public Action<TransportDto> Update { get; set; }
    [Parameter]
    public Func<TransportDto, Task> DeleteAsync { get; set; }
}
